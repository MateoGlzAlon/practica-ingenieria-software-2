services:
  database:
    #    image: postgres:15
    image: mateogonzalezz/stoa-database:latest
    container_name: stoa-database
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork

  frontend:
    container_name: stoa-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8080
        - GOOGLE_CLIENT_ID=value
    environment:
      AWS_BUCKET_NAME: value
      AWS_BUCKET_REGION: value
      AWS_ACCESS_KEY: value
      AWS_SECRET_ACCESS_KEY: value
      OPENAI_API_KEY: value
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - mynetwork

  backend:
    container_name: stoa-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: value
      POSTGRES_DATABASE: value
      POSTGRES_USERNAME: value
      POSTGRES_PASSWORD: value
      GOOGLE_CLIENT_ID: value
      GOOGLE_CLIENT_SECRET: value
    ports:
      - "8080:8080"
    depends_on:
      - database
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

name: stoa-inso2
