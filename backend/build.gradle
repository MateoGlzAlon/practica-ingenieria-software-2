plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.sonarqube" version "5.1.0.4882"
    id 'jacoco'
}

group = 'com.backend'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
}

jacoco {
    toolVersion = "0.8.8" // Specify JaCoCo version
}

jacocoTestReport {
    dependsOn test // Ensure JaCoCo runs after tests

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect{
            fileTree(dir: it, exclude: [
                    "**/persistence/**",
                    "**/configuration/**",
                    "**/exception/**",
                    "**/BackendApplication.java"
            ])
        }
        ))
    }

    reports {
        xml.required.set(true)  // Enable XML report for SonarQube or CI
        html.required.set(true) // Enable HTML report for local inspection
    }
}

sonar {
    properties {
        property "sonar.projectKey", "MateoGlzAlon_practica-ingenieria-software-2"
        property "sonar.organization", "mateoglzalon"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.exclusions", "**/persistence/**,**/configuration/**,**/exception/**,**/BackendApplication.java"
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
